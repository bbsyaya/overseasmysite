# -*- coding: utf-8 -*-
# Generated by Django 1.11b1 on 2017-05-21 01:57
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='GraduateUniver',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('high', models.IntegerField(max_length=32)),
                ('gu_level', models.IntegerField(max_length=32)),
                ('gu_category', models.IntegerField(max_length=32)),
                ('low', models.CharField(max_length=32)),
                ('level', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='Student',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('age', models.CharField(max_length=20)),
                ('score', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='StuInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name_1', models.CharField(max_length=20)),
                ('last_name_1', models.CharField(max_length=20)),
                ('cell_phone_number', models.CharField(max_length=40)),
                ('intention_country', models.IntegerField(choices=[(0, b'---\xe5\x9b\xbd\xe5\xae\xb6---'), (b'USA', b'\xe7\xbe\x8e\xe5\x9b\xbd'), (b'ENG', b'\xe8\x8b\xb1\xe5\x9b\xbd'), (b'AUS', b'\xe6\xbe\xb3\xe5\xa4\xa7\xe5\x88\xa9\xe4\xba\x9a')], default=0)),
                ('intention_school', models.IntegerField(choices=[(b'0', b'---\xe5\xad\xa6\xe6\xa0\xa1---')], default=0)),
                ('academic_interest', models.IntegerField(choices=[(0, b'--- acdemic interest ---'), (1, b'Artificial Intelligence'), (2, b'Biocomputation'), (3, b'Computer and Network Security'), (4, b'Human Computer Interaction'), (5, b'Information Management and Analytics'), (6, b'Mobile and Internet Computing'), (7, b'Real World Computing'), (8, b'Software Theory'), (9, b'Systems'), (10, b'Theoretical Computer Science')], default=0)),
                ('graduate_school', models.IntegerField(choices=[(0, b'---\xe6\xaf\x95\xe4\xb8\x9a\xe9\x99\xa2\xe6\xa0\xa1---')], default=0)),
                ('GPA', models.FloatField(max_length=10)),
                ('IELFS_TOEFL', models.IntegerField(max_length=20)),
                ('GRE_Total', models.IntegerField(max_length=20)),
                ('GRE_VR', models.IntegerField(max_length=20)),
                ('GRE_QR', models.IntegerField(max_length=20)),
                ('GRE_AW', models.IntegerField(max_length=20)),
                ('In_Papers', models.IntegerField(max_length=20)),
                ('Na_Papers', models.IntegerField(max_length=20)),
                ('In_Patents', models.IntegerField(max_length=20)),
                ('Na_Patents', models.IntegerField(max_length=20)),
                ('Research', models.CharField(max_length=32)),
                ('Placement', models.CharField(max_length=32)),
                ('Social_Practice', models.CharField(max_length=32)),
                ('Specilty', models.CharField(max_length=32)),
                ('Recommendation', models.CharField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='University',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('level', models.IntegerField(max_length=32)),
                ('sublevel', models.IntegerField(max_length=32)),
                ('gu_level', models.IntegerField(max_length=32)),
                ('rank_major', models.IntegerField(max_length=32)),
                ('rank_total', models.IntegerField(max_length=32)),
                ('country', models.CharField(max_length=32)),
                ('major', models.CharField(max_length=32)),
                ('category_level', models.IntegerField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='University_Au',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('level', models.IntegerField(max_length=32)),
                ('sublevel', models.IntegerField(max_length=32)),
                ('gu_level', models.IntegerField(max_length=32)),
                ('rank_major', models.IntegerField(max_length=32)),
                ('rank_total', models.IntegerField(max_length=32)),
                ('country', models.CharField(max_length=32)),
                ('major', models.CharField(max_length=32)),
                ('category_level', models.IntegerField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='University_Ca',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('level', models.IntegerField(max_length=32)),
                ('sublevel', models.IntegerField(max_length=32)),
                ('gu_level', models.IntegerField(max_length=32)),
                ('rank_major', models.IntegerField(max_length=32)),
                ('rank_total', models.IntegerField(max_length=32)),
                ('country', models.CharField(max_length=32)),
                ('major', models.CharField(max_length=32)),
                ('category_level', models.IntegerField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='University_En',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=32)),
                ('level', models.IntegerField(max_length=32)),
                ('sublevel', models.IntegerField(max_length=32)),
                ('gu_level', models.IntegerField(max_length=32)),
                ('rank_major', models.IntegerField(max_length=32)),
                ('rank_total', models.IntegerField(max_length=32)),
                ('country', models.CharField(max_length=32)),
                ('major', models.CharField(max_length=32)),
                ('category_level', models.IntegerField(max_length=32)),
            ],
        ),
        migrations.CreateModel(
            name='UserInfoFormModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('first_name', models.CharField(blank=True, max_length=20)),
                ('last_name', models.CharField(blank=True, max_length=20)),
                ('cell_phone_number', models.CharField(max_length=40)),
                ('intention_country', models.CharField(choices=[(0, b'---\xe5\x9b\xbd\xe5\xae\xb6---'), (b'USA', b'\xe7\xbe\x8e\xe5\x9b\xbd'), (b'ENG', b'\xe8\x8b\xb1\xe5\x9b\xbd'), (b'AUS', b'\xe6\xbe\xb3\xe5\xa4\xa7\xe5\x88\xa9\xe4\xba\x9a')], default=0, max_length=20)),
                ('intention_school', models.CharField(blank=True, max_length=20)),
                ('intention_major', models.CharField(choices=[(0, b'---\xe4\xb8\x93\xe4\xb8\x9a---'), (b'EE', b'\xe7\x94\xb5\xe5\xad\x90\xe5\xb7\xa5\xe7\xa8\x8b'), (b'CS', b'\xe8\xae\xa1\xe7\xae\x97\xe6\x9c\xba\xe7\xa7\x91\xe5\xad\xa6')], default=0, max_length=20)),
                ('graduate_school', models.IntegerField(choices=[(b'0', b'---\xe6\xaf\x95\xe4\xb8\x9a\xe9\x99\xa2\xe6\xa0\xa1---'), (1, '\u6e05\u534e\u5927\u5b66'), (2, '\u5317\u4eac\u5927\u5b66'), (3, '\u6b66\u6c49\u5927\u5b66'), (4, '\u590d\u65e6\u5927\u5b66'), (5, '\u6d59\u6c5f\u5927\u5b66'), (6, '\u4e0a\u6d77\u4ea4\u901a\u5927\u5b66'), (7, '\u5357\u4eac\u5927\u5b66'), (8, '\u4e2d\u56fd\u4eba\u6c11\u5927\u5b66'), (9, '\u5409\u6797\u5927\u5b66'), (10, '\u534e\u4e2d\u79d1\u6280\u5927\u5b66'), (11, '\u56db\u5ddd\u5927\u5b66'), (12, '\u4e2d\u5c71\u5927\u5b66'), (13, '\u5357\u5f00\u5927\u5b66'), (14, '\u5929\u6d25\u5927\u5b66'), (15, '\u4e2d\u56fd\u79d1\u5b66\u6280\u672f\u5927\u5b66'), (16, '\u897f\u5b89\u4ea4\u901a\u5927\u5b66'), (17, '\u4e2d\u5357\u5927\u5b66'), (18, '\u54c8\u5c14\u6ee8\u5de5\u4e1a\u5927\u5b66'), (19, '\u5317\u4eac\u5e08\u8303\u5927\u5b66'), (20, '\u5c71\u4e1c\u5927\u5b66'), (21, '\u53a6\u95e8\u5927\u5b66'), (22, '\u4e1c\u5357\u5927\u5b66'), (23, '\u5317\u4eac\u822a\u7a7a\u822a\u5929\u5927\u5b66'), (24, '\u540c\u6d4e\u5927\u5b66'), (25, '\u4e1c\u5317\u5927\u5b66'), (26, '\u5927\u8fde\u7406\u5de5\u5927\u5b66'), (27, '\u534e\u5357\u7406\u5de5\u5927\u5b66'), (28, '\u534e\u4e1c\u5e08\u8303\u5927\u5b66'), (29, '\u7535\u5b50\u79d1\u6280\u5927\u5b66'), (30, '\u6e56\u5357\u5927\u5b66'), (31, '\u91cd\u5e86\u5927\u5b66'), (32, '\u897f\u5317\u5de5\u4e1a\u5927\u5b66'), (33, '\u4e2d\u56fd\u519c\u4e1a\u5927\u5b66'), (34, '\u5170\u5dde\u5927\u5b66'), (35, '\u5317\u4eac\u7406\u5de5\u5927\u5b66'), (36, '\u897f\u5357\u5927\u5b66'), (37, '\u4e1c\u5317\u5e08\u8303\u5927\u5b66'), (38, '\u5317\u4eac\u4ea4\u901a\u5927\u5b66'), (39, '\u6b66\u6c49\u7406\u5de5\u5927\u5b66'), (40, '\u90d1\u5dde\u5927\u5b66'), (41, '\u5357\u4eac\u7406\u5de5\u5927\u5b66'), (42, '\u897f\u5b89\u7535\u5b50\u79d1\u6280\u5927\u5b66'), (43, '\u4e2d\u56fd\u6d77\u6d0b\u5927\u5b66'), (44, '\u534e\u4e1c\u7406\u5de5\u5927\u5b66'), (45, '\u5357\u4eac\u822a\u7a7a\u822a\u5929\u5927\u5b66'), (46, '\u4e2d\u56fd\u77ff\u4e1a\u5927\u5b66'), (47, '\u5317\u4eac\u79d1\u6280\u5927\u5b66'), (48, '\u4e0a\u6d77\u5927\u5b66'), (49, '\u897f\u5317\u519c\u6797\u79d1\u6280\u5927\u5b66'), (50, '\u4e2d\u592e\u6c11\u65cf\u5927\u5b66'), (51, '\u56fd\u9632\u79d1\u6280\u5927\u5b66'), (106, '\u5317\u4eac\u90ae\u7535\u5927\u5b66'), (107, '\u5bf9\u5916\u7ecf\u8d38\u5927\u5b66'), (108, '\u5176\u4ed6\u5927\u5b66')], default=0, max_length=20)),
                ('ranking_in_major', models.IntegerField(choices=[(0, b'---\xe4\xb8\x93\xe4\xb8\x9a\xe6\x8e\x92\xe5\x90\x8d---'), (1, b'top 5%'), (2, b'top 10%'), (3, b'top 30%'), (4, b'top 50%')], default=0, max_length=20)),
                ('score_GPA', models.FloatField(max_length=20)),
                ('score_IELTS_TOEFL', models.FloatField(max_length=20)),
                ('score_IT_Listening', models.FloatField(max_length=20)),
                ('score_IT_Speaking', models.FloatField(max_length=20)),
                ('score_IT_Reading', models.FloatField(max_length=20)),
                ('score_IT_Writing', models.FloatField(max_length=20)),
                ('score_GRE', models.IntegerField(blank=True, max_length=20)),
                ('score_GRE_Verbal', models.IntegerField(blank=True, max_length=20)),
                ('score_GRE_Quan', models.IntegerField(blank=True, max_length=20)),
                ('score_GRE_Anal', models.IntegerField(blank=True, max_length=20)),
                ('in_papers', models.IntegerField(blank=True, max_length=20)),
                ('na_papers', models.IntegerField(blank=True, max_length=20)),
                ('in_patent', models.IntegerField(blank=True, max_length=20)),
                ('na_patent', models.IntegerField(blank=True, max_length=20)),
                ('research', models.TextField(blank=True)),
                ('placement', models.TextField(blank=True)),
                ('social_practice', models.TextField(blank=True)),
                ('specilty', models.TextField(blank=True)),
                ('recommendation', models.IntegerField(choices=[(1, b'\xe4\xbd\xa0\xe7\x9a\x84\xe6\x8e\xa8\xe8\x8d\x90\xe8\x80\x85\xe8\xae\xa4\xe8\xaf\x86\xe5\xaf\xb9\xe6\x96\xb9\xe6\x95\x99\xe6\x8e\x88'), (2, b'\xe4\xbd\xa0\xe7\x9a\x84\xe6\x8e\xa8\xe8\x8d\x90\xe8\x80\x85\xe4\xb8\x8d\xe8\xae\xa4\xe8\xaf\x86\xe5\xaf\xb9\xe6\x96\xb9\xe6\x95\x99\xe6\x8e\x88')], default=0)),
            ],
        ),
    ]
